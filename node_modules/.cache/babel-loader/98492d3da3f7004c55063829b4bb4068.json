{"ast":null,"code":"import _classCallCheck from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GIT\\\\bookstack\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/Queries';\nimport BookDetail from './bookDetail';\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList() {\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"display\",\n    value: function display() {\n      var data = this.props.data;\n\n      if (data.loading) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 19\n          },\n          __self: this\n        }, \"loading...\");\n      } else {\n        return data.books.map(function (book) {\n          return React.createElement(\"li\", {\n            key: book.id,\n            className: \"list-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 25\n            },\n            __self: this\n          }, book.name);\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"book-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, this.display(), React.createElement(BookDetail, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["D:\\GIT\\bookstack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookDetail","BookList","props","state","selected","data","loading","books","map","book","id","name","display"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AAEA,SAASC,aAAT,QAA8B,oBAA9B;AACA,OAAOC,UAAP,MAAwB,cAAxB;;IAEMC,Q;;;;;AAEJ,sBAAa;AAAA;;AAAA;;AACX,kFAAMC,KAAN;AACA,UAAKC,KAAL,GAAW;AACTC,MAAAA,QAAQ,EAAC;AADA,KAAX;AAFW;AAKZ;;;;8BAEU;AACP,UAAIC,IAAI,GAAC,KAAKH,KAAL,CAAWG,IAApB;;AACA,UAAGA,IAAI,CAACC,OAAR,EAAgB;AACd,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFD,MAGI;AACF,eAAOD,IAAI,CAACE,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAE;AAC1B,iBAEG;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,EAAd;AAAkB,YAAA,SAAS,EAAC,WAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAyCD,IAAI,CAACE,IAA9C,CAFH;AAID,SALM,CAAP;AAMD;AAGF;;;6BAEO;AACJ,aACM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAI,QAAA,EAAE,EAAC,WAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKC,OAAL,EADL,EAEI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF,CADN;AAQH;;;;EAnCkBf,S;;AAsCvB,eAAeC,OAAO,CAACC,aAAD,CAAP,CAAuBE,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\n\r\nimport { getBooksQuery } from '../queries/Queries'\r\nimport BookDetail from  './bookDetail'\r\n\r\nclass BookList extends Component {\r\n\r\n  constructor(){\r\n    super(props)\r\n    this.state={\r\n      selected:null\r\n    }\r\n  }\r\n\r\n    display(){\r\n      var data=this.props.data;\r\n      if(data.loading){\r\n        return <div>loading...</div>\r\n      }\r\n      else{\r\n        return data.books.map(book=>{\r\n          return(\r\n\r\n             <li key={book.id} className=\"list-font\">{book.name}</li>\r\n          );\r\n        })\r\n      }\r\n\r\n\r\n    }\r\n\r\n    render(){\r\n        return(\r\n              <div>\r\n                <ul id=\"book-list\">\r\n                    {this.display()}\r\n                    <BookDetail/>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}