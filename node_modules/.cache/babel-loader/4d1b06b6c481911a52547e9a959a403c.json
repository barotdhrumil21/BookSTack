{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\components\\\\BookDetails.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBookQuery } from '../queries/queries';\n\nvar BookDetails =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookDetails, _Component);\n\n  function BookDetails(props) {\n    _classCallCheck(this, BookDetails);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(BookDetails).call(this, props));\n  }\n\n  _createClass(BookDetails, [{\n    key: \"displayBookDetails\",\n    value: function displayBookDetails() {\n      var book = this.props.data.book;\n\n      try {\n        console.log(book.name);\n\n        if (this.props.bookId !== null) {\n          return React.createElement(\"div\", {\n            className: \"site-font\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 17\n            },\n            __self: this\n          }, React.createElement(\"h2\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 18\n            },\n            __self: this\n          }, book.name), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 19\n            },\n            __self: this\n          }, \"genre : \"), book.genre.map(function (item) {\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 21\n              },\n              __self: this\n            }, item);\n          }), React.createElement(\"h4\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 23\n            },\n            __self: this\n          }, \"author : \"), book.author.map(function (item) {\n            return React.createElement(\"p\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25\n              },\n              __self: this\n            }, item);\n          }));\n        } else {\n          return React.createElement(\"h1\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 31\n            },\n            __self: this\n          }, \"SO Sorry about that, we're still devloping...\");\n        }\n      } catch (e) {\n        console.log(\"soryy\");\n        return React.createElement(\"h1\", {\n          id: \"err\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"no data found..\");\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        id: \"book-details\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, this.displayBookDetails());\n    }\n  }]);\n\n  return BookDetails;\n}(Component);\n\nexport default graphql(getBookQuery, {\n  options: function options(props) {\n    return {\n      variables: {\n        id: props.bookId\n      }\n    };\n  }\n})(BookDetails);","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\components\\BookDetails.js"],"names":["React","Component","graphql","getBookQuery","BookDetails","props","book","data","console","log","name","bookId","genre","map","item","author","e","displayBookDetails","options","variables","id"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,YAAT,QAA6B,oBAA7B;;IAEMC,W;;;;;AAEF,uBAAYC,KAAZ,EAAkB;AAAA;;AAAA,oFACVA,KADU;AAGjB;;;;yCACmB;AAChB,UAAIC,IAAI,GAAG,KAAKD,KAAL,CAAWE,IAAX,CAAgBD,IAA3B;;AACA,UAAI;AACFE,QAAAA,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACI,IAAjB;;AACA,YAAG,KAAKL,KAAL,CAAWM,MAAX,KAAsB,IAAzB,EAA+B;AAC7B,iBACI;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAML,IAAI,CAACI,IAAX,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,EAGKJ,IAAI,CAACM,KAAL,CAAWC,GAAX,CAAe,UAAAC,IAAI,EAAI;AACtB,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKA,IAAL,CAAP;AACD,WAFA,CAHL,EAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBANJ,EAOKR,IAAI,CAACS,MAAL,CAAYF,GAAZ,CAAgB,UAAAC,IAAI,EAAI;AACvB,mBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAKA,IAAL,CAAP;AACD,WAFA,CAPL,CADJ;AAaD,SAdD,MAeI;AACF,iBAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6DAAR;AACD;AACF,OApBD,CAoBE,OAAOE,CAAP,EAAU;AACVR,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACE,eAAQ;AAAI,UAAA,EAAE,EAAC,KAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAR;AACH;AAKJ;;;6BACO;AACJ,aACI;AAAK,QAAA,EAAE,EAAC,cAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKQ,kBAAL,EADN,CADJ;AAKH;;;;EA3CqBhB,S;;AA8C1B,eAAeC,OAAO,CAACC,YAAD,EAAe;AACjCe,EAAAA,OAAO,EAAE,iBAACb,KAAD,EAAW;AAChB,WAAO;AACHc,MAAAA,SAAS,EAAE;AACPC,QAAAA,EAAE,EAAEf,KAAK,CAACM;AADH;AADR,KAAP;AAKH;AAPgC,CAAf,CAAP,CAQZP,WARY,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBookQuery } from '../queries/queries';\r\n\r\nclass BookDetails extends Component {\r\n\r\n    constructor(props){\r\n      super(props)\r\n\r\n    }\r\n    displayBookDetails(){\r\n        var book = this.props.data.book;\r\n        try {\r\n          console.log(book.name)\r\n          if(this.props.bookId !== null ){\r\n            return(\r\n                <div className=\"site-font\">\r\n                    <h2>{ book.name }</h2>\r\n                    <h4>genre : </h4>\r\n                    {book.genre.map(item => {\r\n                      return <p>{ item }</p>\r\n                    })}\r\n                    <h4>author : </h4>\r\n                    {book.author.map(item => {\r\n                      return <p>{ item }</p>\r\n                    })}\r\n                </div>\r\n            );\r\n          }\r\n          else{\r\n            return (<h1>SO Sorry about that, we're still devloping...</h1>)\r\n          }\r\n        } catch (e) {\r\n          console.log(\"soryy\")\r\n            return (<h1 id=\"err\">no data found..</h1>) \r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n    render(){\r\n        return(\r\n            <div id=\"book-details\">\r\n                { this.displayBookDetails() }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBookQuery, {\r\n    options: (props) => {\r\n        return {\r\n            variables: {\r\n                id: props.bookId\r\n            }\r\n        }\r\n    }\r\n})(BookDetails);\r\n"]},"metadata":{},"sourceType":"module"}