{"ast":null,"code":"import _classCallCheck from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\Projects\\\\BookStack\\\\BookSTack\\\\src\\\\components\\\\BookList.js\";\nimport React, { Component } from 'react';\nimport { graphql } from 'react-apollo';\nimport { getBooksQuery } from '../queries/queries'; // components\n// import BookDetails from './BookDetails';\n\nvar BookList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(BookList, _Component);\n\n  function BookList(props) {\n    var _this;\n\n    _classCallCheck(this, BookList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(BookList).call(this, props));\n    _this.state = {\n      selected: null\n    };\n    return _this;\n  }\n\n  _createClass(BookList, [{\n    key: \"displayBooks\",\n    value: function displayBooks() {\n      var data = this.props.data; // if(data.loading){\n      //     return( <div>Loading books...</div> );\n      // } else {\n      //     return data.books.map(book => {\n      //         return(\n      //             <li key={ book.id } onClick={ (e) => this.setState({ selected: book.id }) }>{ book.name }</li>\n      //         );\n      //     })\n      // }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(\"ul\", {\n        id: \"book-list\",\n        className: \"site-font\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, this.displayBooks()), \"// \", React.createElement(BookDetails, {\n        bookId: this.state.selected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return BookList;\n}(Component);\n\nexport default graphql(getBooksQuery)(BookList);","map":{"version":3,"sources":["D:\\Projects\\BookStack\\BookSTack\\src\\components\\BookList.js"],"names":["React","Component","graphql","getBooksQuery","BookList","props","state","selected","data","displayBooks"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,cAAxB;AACA,SAASC,aAAT,QAA8B,oBAA9B,C,CAEA;AACA;;IAEMC,Q;;;;;AACF,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AACd,kFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFc;AAKjB;;;;mCACa;AACV,UAAIC,IAAI,GAAG,KAAKH,KAAL,CAAWG,IAAtB,CADU,CAEV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;;;6BACO;AACJ,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,EAAE,EAAC,WAAP;AAAmB,QAAA,SAAS,EAAC,WAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACM,KAAKC,YAAL,EADN,CADJ,SAIO,oBAAC,WAAD;AAAa,QAAA,MAAM,EAAG,KAAKH,KAAL,CAAWC,QAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJP,CADJ;AAQH;;;;EA5BkBN,S;;AA+BvB,eAAeC,OAAO,CAACC,aAAD,CAAP,CAAuBC,QAAvB,CAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { graphql } from 'react-apollo';\r\nimport { getBooksQuery } from '../queries/queries';\r\n\r\n// components\r\n// import BookDetails from './BookDetails';\r\n\r\nclass BookList extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            selected: null\r\n        }\r\n    }\r\n    displayBooks(){\r\n        var data = this.props.data;\r\n        // if(data.loading){\r\n        //     return( <div>Loading books...</div> );\r\n        // } else {\r\n        //     return data.books.map(book => {\r\n        //         return(\r\n        //             <li key={ book.id } onClick={ (e) => this.setState({ selected: book.id }) }>{ book.name }</li>\r\n        //         );\r\n        //     })\r\n        // }\r\n    }\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ul id=\"book-list\" className=\"site-font\">\r\n                    { this.displayBooks() }\r\n                </ul>\r\n                // <BookDetails bookId={ this.state.selected } />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default graphql(getBooksQuery)(BookList);\r\n"]},"metadata":{},"sourceType":"module"}