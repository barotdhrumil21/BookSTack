{"ast":null,"code":"import _classCallCheck from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"D:\\\\GIT\\\\bookstack\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\GIT\\\\bookstack\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport { ApolloProvider } from 'react-apollo';\nimport BookList from './components/BookList'; //apollo client\n\nvar client = new ApolloClient({\n  uri: 'http://35.154.49.7:4000/graphql'\n});\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    _classCallCheck(this, App);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(App).apply(this, arguments));\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"main\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, \"BookSTack\"), React.createElement(BookList, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["D:\\GIT\\bookstack\\src\\App.js"],"names":["React","Component","ApolloClient","ApolloProvider","BookList","client","uri","App"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAAQC,cAAR,QAA6B,cAA7B;AAEA,OAAOC,QAAP,MAAsB,uBAAtB,C,CAEA;;AACA,IAAMC,MAAM,GAAG,IAAIH,YAAJ,CAAiB;AAC9BI,EAAAA,GAAG,EAAC;AAD0B,CAAjB,CAAf;;IAKMC,G;;;;;;;;;;;;;6BACK;AACP,aACE,oBAAC,cAAD;AAAgB,QAAA,MAAM,EAAEF,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAK,QAAA,EAAE,EAAC,MAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,CADA,CADF;AAQD;;;;EAVeJ,S;;AAalB,eAAeM,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport ApolloClient from 'apollo-boost';\nimport {ApolloProvider} from 'react-apollo';\n\nimport BookList from  './components/BookList'\n\n//apollo client\nconst client = new ApolloClient({\n  uri:'http://35.154.49.7:4000/graphql'\n})\n\n\nclass App extends Component {\n  render() {\n    return (\n      <ApolloProvider client={client} >\n      <div id=\"main\">\n        <h1>BookSTack</h1>\n        <BookList/>\n      </div>\n      </ApolloProvider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}